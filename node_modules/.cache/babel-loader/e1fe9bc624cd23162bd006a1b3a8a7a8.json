{"ast":null,"code":"var _jsxFileName = \"/home/alby/Projects/Richard/pivotdhis2/src/Contexts/DiseaseSurveillance/DiseaseSurveillance.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DiseaseSurveillanceContext = /*#__PURE__*/createContext();\nexport const DiseaseSurveillanceProvider = props => {\n  _s();\n\n  const [period, SetPeriod] = useState(\"LAST_12_MONTHS\");\n\n  const handlePeriodChange = val => {\n    if (val !== \"\") {\n      SetPeriod(val);\n    }\n  };\n\n  const {\n    children\n  } = props;\n  return /*#__PURE__*/_jsxDEV(DiseaseSurveillanceContext.Provider, {\n    value: {\n      handlePeriodChange\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DiseaseSurveillanceProvider, \"nEj2U9dRe36HRruzjf7b5YlB/Ko=\");\n\n_c = DiseaseSurveillanceProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiseaseSurveillanceProvider\");","map":{"version":3,"sources":["/home/alby/Projects/Richard/pivotdhis2/src/Contexts/DiseaseSurveillance/DiseaseSurveillance.js"],"names":["createContext","useState","DiseaseSurveillanceContext","DiseaseSurveillanceProvider","props","period","SetPeriod","handlePeriodChange","val","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,0BAA0B,gBAAGF,aAAa,EAAhD;AAEP,OAAO,MAAMG,2BAA2B,GAAEC,KAAD,IAAS;AAAA;;AAE9C,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBL,QAAQ,CAAC,gBAAD,CAAjC;;AAEA,QAAMM,kBAAkB,GAAEC,GAAD,IAAO;AAC5B,QAAGA,GAAG,KAAK,EAAX,EAAc;AACVF,MAAAA,SAAS,CAACE,GAAD,CAAT;AACH;AAEJ,GALD;;AAQA,QAAM;AAACC,IAAAA;AAAD,MAAWL,KAAjB;AACA,sBACI,QAAC,0BAAD,CAA4B,QAA5B;AAAqC,IAAA,KAAK,EAAE;AAACG,MAAAA;AAAD,KAA5C;AAAA,cACKE;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlBM;;GAAMN,2B;;KAAAA,2B","sourcesContent":["import { createContext, useState } from \"react\";\n\nexport const DiseaseSurveillanceContext = createContext()\n\nexport const DiseaseSurveillanceProvider=(props)=>{\n\n    const [period,SetPeriod]=useState(\"LAST_12_MONTHS\");\n\n    const handlePeriodChange=(val)=>{\n        if(val !== \"\"){\n            SetPeriod(val)\n        }\n        \n    }\n\n    \n    const {children}=props\n    return(\n        <DiseaseSurveillanceContext.Provider value={{handlePeriodChange}}>\n            {children}\n        </DiseaseSurveillanceContext.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}