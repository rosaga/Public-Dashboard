{"ast":null,"code":"var _jsxFileName = \"/home/alby/Projects/Richard/pivotdhis2/src/Contexts/DiseaseSurveillance/DiseaseSurveillance.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DiseaseSurveillanceContext = /*#__PURE__*/createContext();\nexport const DiseaseSurveillanceProvider = props => {\n  _s();\n\n  const [period, SetPeriod] = useState(\"LAST_12_MONTHS\");\n\n  const handlePeriodChange = val => {\n    if (val !== \"\") {\n      SetPeriod(val);\n    }\n  };\n\n  const {\n    children\n  } = props;\n  return /*#__PURE__*/_jsxDEV(DiseaseSurveillanceContext.Provider, {\n    value: {\n      handlePeriodChange\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DiseaseSurveillanceProvider, \"IGwcblx1Rl2G8gPlakKxuZJmPsU=\");\n\n_c = DiseaseSurveillanceProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiseaseSurveillanceProvider\");","map":{"version":3,"sources":["/home/alby/Projects/Richard/pivotdhis2/src/Contexts/DiseaseSurveillance/DiseaseSurveillance.js"],"names":["createContext","useState","DiseaseSurveillanceContext","DiseaseSurveillanceProvider","props","period","SetPeriod","handlePeriodChange","val","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,0BAA0B,gBAAGF,aAAa,EAAhD;AAEP,OAAO,MAAMG,2BAA2B,GAAIC,KAAD,IAAW;AAAA;;AACpD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,gBAAD,CAApC;;AAEA,QAAMM,kBAAkB,GAAIC,GAAD,IAAS;AAClC,QAAIA,GAAG,KAAK,EAAZ,EAAgB;AACdF,MAAAA,SAAS,CAACE,GAAD,CAAT;AACD;AACF,GAJD;;AAMA,QAAM;AAAEC,IAAAA;AAAF,MAAeL,KAArB;AACA,sBACE,QAAC,0BAAD,CAA4B,QAA5B;AAAqC,IAAA,KAAK,EAAE;AAAEG,MAAAA;AAAF,KAA5C;AAAA,cACGE;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfM;;GAAMN,2B;;KAAAA,2B","sourcesContent":["import { createContext, useState } from \"react\";\n\nexport const DiseaseSurveillanceContext = createContext();\n\nexport const DiseaseSurveillanceProvider = (props) => {\n  const [period, SetPeriod] = useState(\"LAST_12_MONTHS\");\n\n  const handlePeriodChange = (val) => {\n    if (val !== \"\") {\n      SetPeriod(val);\n    }\n  };\n\n  const { children } = props;\n  return (\n    <DiseaseSurveillanceContext.Provider value={{ handlePeriodChange }}>\n      {children}\n    </DiseaseSurveillanceContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}