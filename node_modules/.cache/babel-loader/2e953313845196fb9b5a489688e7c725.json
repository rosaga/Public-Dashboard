{"ast":null,"code":"var _jsxFileName = \"/home/alby/Projects/Richard/pivotdhis2/src/Contexts/DiseaseSurveillance/DiseaseSurveillance.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { justFetch } from \"../../Services/JustFetchService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DiseaseSurveillanceContext = /*#__PURE__*/createContext();\nexport const DiseaseSurveillanceProvider = props => {\n  _s();\n\n  const [period, SetPeriod] = useState(\"LAST_12_MONTHS\");\n  const [dataPe, SetDataPe] = useState([]);\n  const [datadx, SetDataDx] = useState([]);\n  const [dataRows, SetDataRows] = useState([]);\n  const [dataItems, SetDataItems] = useState([]);\n  const [allData, SetAllData] = useState([]);\n  const [dataToMap, SetDataToMap] = useState([]);\n\n  const handlePeriodChange = val => {\n    if (val !== \"\") {\n      SetPeriod(val);\n    }\n  };\n\n  const getANCCoverage = () => {\n    //   console.log(\"eunning\")\n    justFetch(`\n    https://play.dhis2.org/2.35.1/api/29/analytics.json?dimension=dx:fbfJHSPpUQD;cYeuwXTCPkU;Jtf34kNZhzP;hfdmMSPBgLG&dimension=pe:LAST_12_MONTHS&dimension=ou:ImspTQPwCqd&displayProperty=NAME&outputIdScheme=UID\n    `, {}).then(res => {\n      console.log(res);\n      SetAllData(res);\n      SetDataDx(res.metaData.dimensions.dx);\n      SetDataItems(res.metaData.items);\n      SetDataPe(res.metaData.dimensions.pe);\n      SetDataRows(res.rows);\n    }).catch(err => {});\n  };\n\n  const generateDataForMap = () => {\n    let mapData = [];\n    console.log(dataRows);\n    datadx.map(mydx => {\n      let indicatorName = \"\";\n      let data = [];\n      let finalData = {\n        name: indicatorName,\n        data: data\n      }; //   console.log(dataItems[mydx].name)\n\n      indicatorName = dataItems[mydx].name;\n      let filteredData = dataRows.filter(dr => {\n        return dr[0] === mydx;\n      });\n      data = filteredData.sort((a, b) => {\n        return a[1] - b[1];\n      });\n      data = [{\n        name: indicatorName,\n        data: filteredData\n      }];\n      console.log(data);\n      mapData = [...mapData, data];\n    });\n    SetDataToMap(mapData);\n  };\n\n  useEffect(() => {\n    //   effect\n    getANCCoverage();\n    return () => {//   cleanup\n    };\n  }, []);\n  useEffect(() => {\n    if (dataItems !== \"undefined\" || dataItems !== null) {\n      generateDataForMap();\n    }\n  }, [datadx, dataItems, dataRows]);\n  const {\n    children\n  } = props;\n  return /*#__PURE__*/_jsxDEV(DiseaseSurveillanceContext.Provider, {\n    value: {\n      handlePeriodChange,\n      dataToMap\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DiseaseSurveillanceProvider, \"HqMW12BR61VicVNEM8JOZYvffxw=\");\n\n_c = DiseaseSurveillanceProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiseaseSurveillanceProvider\");","map":{"version":3,"sources":["/home/alby/Projects/Richard/pivotdhis2/src/Contexts/DiseaseSurveillance/DiseaseSurveillance.js"],"names":["createContext","useEffect","useState","justFetch","DiseaseSurveillanceContext","DiseaseSurveillanceProvider","props","period","SetPeriod","dataPe","SetDataPe","datadx","SetDataDx","dataRows","SetDataRows","dataItems","SetDataItems","allData","SetAllData","dataToMap","SetDataToMap","handlePeriodChange","val","getANCCoverage","then","res","console","log","metaData","dimensions","dx","items","pe","rows","catch","err","generateDataForMap","mapData","map","mydx","indicatorName","data","finalData","name","filteredData","filter","dr","sort","a","b","children"],"mappings":"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","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { justFetch } from \"../../Services/JustFetchService\";\n\nexport const DiseaseSurveillanceContext = createContext();\n\nexport const DiseaseSurveillanceProvider = (props) => {\n  const [period, SetPeriod] = useState(\"LAST_12_MONTHS\");\n  const [dataPe,SetDataPe]=useState([]);\n  const [datadx,SetDataDx]=useState([]);\n  const [dataRows,SetDataRows]=useState([]);\n  const [dataItems,SetDataItems]=useState([])\n  const [allData,SetAllData]=useState([])\n  const [dataToMap,SetDataToMap]=useState([])\n\n\n  const handlePeriodChange = (val) => {\n    if (val !== \"\") {\n      SetPeriod(val);\n    }\n  };\n\n  const getANCCoverage=()=>{\n    //   console.log(\"eunning\")\n\n    justFetch(`\n    https://play.dhis2.org/2.35.1/api/29/analytics.json?dimension=dx:fbfJHSPpUQD;cYeuwXTCPkU;Jtf34kNZhzP;hfdmMSPBgLG&dimension=pe:LAST_12_MONTHS&dimension=ou:ImspTQPwCqd&displayProperty=NAME&outputIdScheme=UID\n    `,{}).then((res)=>{\n        console.log(res)\n        SetAllData(res)\n        SetDataDx(res.metaData.dimensions.dx)\n        SetDataItems(res.metaData.items)\n        SetDataPe(res.metaData.dimensions.pe)\n        SetDataRows(res.rows)\n\n    }).catch((err)=>{\n\n    })\n      \n  }\n\n  const generateDataForMap=()=>{\n      let mapData=[]\nconsole.log(dataRows)\n      datadx.map((mydx)=>{\n          let indicatorName=\"\"\n          let data=[]\n          let finalData={\n              name:indicatorName,\n              data:data\n          }\n        //   console.log(dataItems[mydx].name)\n          indicatorName=dataItems[mydx].name\n\n          let filteredData=dataRows.filter((dr)=>{\n              return dr[0] === mydx\n\n          })\n\n          data=filteredData.sort((a,b)=>{\n                return a[1]-b[1]\n          })\n          data=[{name:indicatorName,data: filteredData}]\n        console.log(data)\n        mapData=[...mapData,data]\n\n      })\n\n      SetDataToMap(mapData)\n\n\n      \n\n\n\n\n  }\n\n  useEffect(() => {\n    //   effect\n    getANCCoverage()\n      return () => {\n        //   cleanup\n      }\n  }, [])\n\n  useEffect(()=>{\n    if(dataItems !== \"undefined\" || dataItems !== null){\n        generateDataForMap()\n    }\n  },[datadx,dataItems,dataRows])\n\n  const { children } = props;\n  return (\n    <DiseaseSurveillanceContext.Provider value={{ handlePeriodChange ,dataToMap}}>\n      {children}\n    </DiseaseSurveillanceContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}