{"ast":null,"code":"var _jsxFileName = \"/home/alby/Projects/Richard/pivotdhis2/src/Contexts/DiseaseSurveillance/DiseaseSurveillance.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { justFetch } from \"../../Services/JustFetchService\";\nimport { getData, getPeriodName } from \"../../Utils/Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DiseaseSurveillanceContext = /*#__PURE__*/createContext();\nexport const DiseaseSurveillanceProvider = props => {\n  _s();\n\n  const period = \"LAST_12_MONTHS\";\n  const [dataPe, SetDataPe] = useState([]);\n  const [datadx, SetDataDx] = useState([]);\n  const [dataRows, SetDataRows] = useState([]);\n  const [dataItems, SetDataItems] = useState([]);\n  const [allData, SetAllData] = useState([]);\n  const [dataToMap, SetDataToMap] = useState([]);\n  const [mapPeriods, setMapPeriods] = useState([]);\n\n  const handlePeriodChange = val => {\n    if (val !== \"\") {\n      SetPeriod(val);\n    }\n  }; //   https://play.dhis2.org/2.35.1/api/29/analytics.json?dimension=dx:tn3p7vIxoKY;R1WAv9bVXff;ncEnqRPHFvk;FE82N2sA0YI&dimension=pe:LAST_12_MONTHS&filter=ou:ImspTQPwCqd&displayProperty=NAME&outputIdScheme=UID\n\n\n  const getANCCoverage = async () => {\n    // console.log(\"running\");\n    console.log({\n      period\n    });\n    let url = `https://play.dhis2.org/2.34.3/api/29/analytics.json?dimension=dx:fbfJHSPpUQD;cYeuwXTCPkU;Jtf34kNZhzP;hfdmMSPBgLG&dimension=pe:${period}&dimension=ou:ImspTQPwCqd&displayProperty=NAME&outputIdScheme=UID`; // justFetch(\n    //   `\n    // https://play.dhis2.org/2.34.3/api/29/analytics.json?dimension=dx:fbfJHSPpUQD;cYeuwXTCPkU;Jtf34kNZhzP;hfdmMSPBgLG&dimension=pe:LAST_12_MONTHS&dimension=ou:ImspTQPwCqd&displayProperty=NAME&outputIdScheme=UID\n    // `,\n    //   {}\n    // )\n    //   .then((res) => {\n    //     console.log(res);\n    //     SetAllData(res);\n    //     SetDataDx(res.metaData.dimensions.dx);\n    //     SetDataItems(res.metaData.items);\n    //     SetDataPe(res.metaData.dimensions.pe);\n    //     SetDataRows(res.rows);\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n\n    let getDataApi = await justFetch(url, {});\n    let res = await getDataApi; // console.log(res)\n\n    SetAllData(await res);\n    SetDataDx(await res.metaData.dimensions.dx);\n    SetDataItems(await res.metaData.items);\n    SetDataPe(await res.metaData.dimensions.pe);\n    SetDataRows(await res.rows);\n  };\n\n  const getDeliveries = () => {\n    justFetch(`\n https://play.dhis2.org/2.35.1/api/29/analytics.json?dimension=dx:tn3p7vIxoKY;R1WAv9bVXff;ncEnqRPHFvk;FE82N2sA0YI&dimension=pe:LAST_12_MONTHS&filter=ou:ImspTQPwCqd&displayProperty=NAME&outputIdScheme=UID`, {}).then(res => {\n      // console.log(res);\n      SetAllData(res);\n      SetDataDx(allData.metaData.dimensions.dx);\n      SetDataItems(allData.metaData.items);\n      SetDataPe(allData.metaData.dimensions.pe);\n      SetDataRows(allData.rows);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const generateDataForMap = () => {\n    // console.log(\"generating map data\")\n    let mapData = [];\n    datadx.map(mydx => {\n      let indicatorName = \"\";\n      let data = [];\n      let finalData = {\n        name: indicatorName,\n        data: data\n      }; // console.log(dataItems[mydx].name);\n\n      indicatorName = dataItems[mydx].name;\n      let filteredData = dataRows.filter(dr => {\n        return dr[0] === mydx;\n      }).map(dr2 => {\n        return parseInt(dr2[3]);\n      });\n      data = filteredData.sort((a, b) => {\n        return a[1] - b[1];\n      }); // console.log(filteredData)\n\n      data = [{\n        name: indicatorName,\n        data: filteredData\n      }];\n      console.log(data);\n      mapData = [...mapData, data[0]];\n    });\n    SetDataToMap(mapData);\n  };\n\n  useEffect(() => {\n    SetPeriod(\"LAST_12_MONTHS\");\n  }, []);\n  useEffect(() => {\n    //   effect\n    getANCCoverage();\n    let url = `\n    https://play.dhis2.org/2.34.3/api/29/analytics.json?dimension=dx:fbfJHSPpUQD;cYeuwXTCPkU;Jtf34kNZhzP;hfdmMSPBgLG&dimension=pe:${period}&dimension=ou:ImspTQPwCqd&displayProperty=NAME&outputIdScheme=UID\n    `; // SetAllData(getData(url));\n    // getData(url).then((res)=>{\n    // SetAllData(res);\n    // SetDataDx(res.metaData.dimensions.dx)\n    // SetDataItems(res.metaData.items);\n    // SetDataPe(allData.metaData.dimensions.pe);\n    // SetDataRows(allData.rows);\n    // })\n    // SetDataDx(getData(url).metaData.dimensions.dx);\n    // SetDataItems(allData.metaData.items);\n    // SetDataPe(allData.metaData.dimensions.pe);\n    // SetDataRows(allData.rows);\n  }, [period]);\n  useEffect(() => {\n    // console.log(dataItems);\n    generateDataForMap(); // console.log(0)\n  }, [dataPe]);\n  useEffect(() => {\n    setMapPeriods(getPeriodName(dataPe, dataItems));\n  }, [allData]);\n  const {\n    children\n  } = props;\n  return /*#__PURE__*/_jsxDEV(DiseaseSurveillanceContext.Provider, {\n    value: {\n      handlePeriodChange,\n      dataToMap,\n      dataPe,\n      dataItems,\n      mapPeriods,\n      allData,\n      datadx\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DiseaseSurveillanceProvider, \"HqZTpX8nJ10x87Kq16Wl6SFbwvs=\");\n\n_c = DiseaseSurveillanceProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiseaseSurveillanceProvider\");","map":{"version":3,"sources":["/home/alby/Projects/Richard/pivotdhis2/src/Contexts/DiseaseSurveillance/DiseaseSurveillance.js"],"names":["createContext","useEffect","useState","justFetch","getData","getPeriodName","DiseaseSurveillanceContext","DiseaseSurveillanceProvider","props","period","dataPe","SetDataPe","datadx","SetDataDx","dataRows","SetDataRows","dataItems","SetDataItems","allData","SetAllData","dataToMap","SetDataToMap","mapPeriods","setMapPeriods","handlePeriodChange","val","SetPeriod","getANCCoverage","console","log","url","getDataApi","res","metaData","dimensions","dx","items","pe","rows","getDeliveries","then","catch","err","generateDataForMap","mapData","map","mydx","indicatorName","data","finalData","name","filteredData","filter","dr","dr2","parseInt","sort","a","b","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,mBAAvC;;AAEA,OAAO,MAAMC,0BAA0B,gBAAGN,aAAa,EAAhD;AAEP,OAAO,MAAMO,2BAA2B,GAAIC,KAAD,IAAW;AAAA;;AACpD,QAAMC,MAAM,GAAC,gBAAb;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMsB,kBAAkB,GAAIC,GAAD,IAAS;AAClC,QAAIA,GAAG,KAAK,EAAZ,EAAgB;AACdC,MAAAA,SAAS,CAACD,GAAD,CAAT;AACD;AAEF,GALD,CAVoD,CAkBpD;;;AAEA,QAAME,cAAc,GAAG,YAAW;AAChC;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEpB,MAAAA;AAAF,KAAZ;AAEE,QAAIqB,GAAG,GAAK,iIAAgIrB,MAAO,mEAAnJ,CAJgC,CAOhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAIsB,UAAU,GAAC,MAAM5B,SAAS,CAAC2B,GAAD,EAAK,EAAL,CAA9B;AACA,QAAIE,GAAG,GAAC,MAAMD,UAAd,CA1BgC,CA2BhC;;AACIZ,IAAAA,UAAU,CAAC,MAAMa,GAAP,CAAV;AACAnB,IAAAA,SAAS,CAAC,MAAMmB,GAAG,CAACC,QAAJ,CAAaC,UAAb,CAAwBC,EAA/B,CAAT;AACAlB,IAAAA,YAAY,CAAC,MAAMe,GAAG,CAACC,QAAJ,CAAaG,KAApB,CAAZ;AACAzB,IAAAA,SAAS,CAAC,MAAMqB,GAAG,CAACC,QAAJ,CAAaC,UAAb,CAAwBG,EAA/B,CAAT;AACAtB,IAAAA,WAAW,CAAC,MAAMiB,GAAG,CAACM,IAAX,CAAX;AAGL,GAnCD;;AAqCA,QAAMC,aAAa,GAAG,MAAM;AAC1BpC,IAAAA,SAAS,CACN;AACP,4MAFa,EAGP,EAHO,CAAT,CAKGqC,IALH,CAKSR,GAAD,IAAS;AACb;AACAb,MAAAA,UAAU,CAACa,GAAD,CAAV;AACAnB,MAAAA,SAAS,CAACK,OAAO,CAACe,QAAR,CAAiBC,UAAjB,CAA4BC,EAA7B,CAAT;AACAlB,MAAAA,YAAY,CAACC,OAAO,CAACe,QAAR,CAAiBG,KAAlB,CAAZ;AACAzB,MAAAA,SAAS,CAACO,OAAO,CAACe,QAAR,CAAiBC,UAAjB,CAA4BG,EAA7B,CAAT;AACAtB,MAAAA,WAAW,CAACG,OAAO,CAACoB,IAAT,CAAX;AACD,KAZH,EAaGG,KAbH,CAaUC,GAAD,IAAS;AACdd,MAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACD,KAfH;AAgBD,GAjBD;;AAmBA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B;AACA,QAAIC,OAAO,GAAG,EAAd;AAEAhC,IAAAA,MAAM,CAACiC,GAAP,CAAYC,IAAD,IAAU;AACnB,UAAIC,aAAa,GAAG,EAApB;AACA,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,SAAS,GAAG;AACdC,QAAAA,IAAI,EAAEH,aADQ;AAEdC,QAAAA,IAAI,EAAEA;AAFQ,OAAhB,CAHmB,CAOnB;;AACAD,MAAAA,aAAa,GAAG/B,SAAS,CAAC8B,IAAD,CAAT,CAAgBI,IAAhC;AAEA,UAAIC,YAAY,GAAGrC,QAAQ,CACxBsC,MADgB,CACRC,EAAD,IAAQ;AACd,eAAOA,EAAE,CAAC,CAAD,CAAF,KAAUP,IAAjB;AACD,OAHgB,EAIhBD,GAJgB,CAIXS,GAAD,IAAS;AACZ,eAAOC,QAAQ,CAACD,GAAG,CAAC,CAAD,CAAJ,CAAf;AACD,OANgB,CAAnB;AAQAN,MAAAA,IAAI,GAAGG,YAAY,CAACK,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACjC,eAAOD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAf;AACD,OAFM,CAAP,CAlBmB,CAqBjB;;AACFV,MAAAA,IAAI,GAAG,CAAC;AAAEE,QAAAA,IAAI,EAAEH,aAAR;AAAuBC,QAAAA,IAAI,EAAEG;AAA7B,OAAD,CAAP;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAZ;AACAJ,MAAAA,OAAO,GAAG,CAAC,GAAGA,OAAJ,EAAaI,IAAI,CAAC,CAAD,CAAjB,CAAV;AACD,KAzBD;AA2BA3B,IAAAA,YAAY,CAACuB,OAAD,CAAZ;AACD,GAhCD;;AAkCA3C,EAAAA,SAAS,CAAC,MAAI;AACZyB,IAAAA,SAAS,CAAC,gBAAD,CAAT;AACD,GAFQ,EAEP,EAFO,CAAT;AAIAzB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA0B,IAAAA,cAAc;AACd,QAAIG,GAAG,GAAG;AACd,oIAAoIrB,MAAO;AAC3I,KAFI,CAHc,CAMd;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;AACI;AACA;AACA;AACA;AAED,GArBQ,EAqBN,CAACA,MAAD,CArBM,CAAT;AAuBAR,EAAAA,SAAS,CAAC,MAAM;AACd;AAGA0C,IAAAA,kBAAkB,GAJJ,CAMd;AACD,GAPQ,EAON,CAACjC,MAAD,CAPM,CAAT;AASAT,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,aAAa,CAAClB,aAAa,CAACK,MAAD,EAASM,SAAT,CAAd,CAAb;AACD,GAFQ,EAEN,CAACE,OAAD,CAFM,CAAT;AAIA,QAAM;AAAEyC,IAAAA;AAAF,MAAenD,KAArB;AACA,sBACE,QAAC,0BAAD,CAA4B,QAA5B;AACE,IAAA,KAAK,EAAE;AAAEgB,MAAAA,kBAAF;AAAsBJ,MAAAA,SAAtB;AAAiCV,MAAAA,MAAjC;AAAyCM,MAAAA,SAAzC;AAAoDM,MAAAA,UAApD;AAAgEJ,MAAAA,OAAhE;AAAwEN,MAAAA;AAAxE,KADT;AAAA,cAGG+C;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA9JM;;GAAMpD,2B;;KAAAA,2B","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { justFetch } from \"../../Services/JustFetchService\";\nimport { getData, getPeriodName } from \"../../Utils/Utils\";\n\nexport const DiseaseSurveillanceContext = createContext();\n\nexport const DiseaseSurveillanceProvider = (props) => {\n  const period=\"LAST_12_MONTHS\";\n  const [dataPe, SetDataPe] = useState([]);\n  const [datadx, SetDataDx] = useState([]);\n  const [dataRows, SetDataRows] = useState([]);\n  const [dataItems, SetDataItems] = useState([]);\n  const [allData, SetAllData] = useState([]);\n  const [dataToMap, SetDataToMap] = useState([]);\n  const [mapPeriods, setMapPeriods] = useState([]);\n\n  const handlePeriodChange = (val) => {\n    if (val !== \"\") {\n      SetPeriod(val);\n    }\n\n  };\n\n\n  //   https://play.dhis2.org/2.35.1/api/29/analytics.json?dimension=dx:tn3p7vIxoKY;R1WAv9bVXff;ncEnqRPHFvk;FE82N2sA0YI&dimension=pe:LAST_12_MONTHS&filter=ou:ImspTQPwCqd&displayProperty=NAME&outputIdScheme=UID\n\n  const getANCCoverage = async() => {\n    // console.log(\"running\");\n  console.log({ period });\n\n    let url =  `https://play.dhis2.org/2.34.3/api/29/analytics.json?dimension=dx:fbfJHSPpUQD;cYeuwXTCPkU;Jtf34kNZhzP;hfdmMSPBgLG&dimension=pe:${period}&dimension=ou:ImspTQPwCqd&displayProperty=NAME&outputIdScheme=UID`\n\n\n    // justFetch(\n    //   `\n    // https://play.dhis2.org/2.34.3/api/29/analytics.json?dimension=dx:fbfJHSPpUQD;cYeuwXTCPkU;Jtf34kNZhzP;hfdmMSPBgLG&dimension=pe:LAST_12_MONTHS&dimension=ou:ImspTQPwCqd&displayProperty=NAME&outputIdScheme=UID\n    // `,\n    //   {}\n    // )\n    //   .then((res) => {\n    //     console.log(res);\n    //     SetAllData(res);\n    //     SetDataDx(res.metaData.dimensions.dx);\n    //     SetDataItems(res.metaData.items);\n    //     SetDataPe(res.metaData.dimensions.pe);\n    //     SetDataRows(res.rows);\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n\n    let getDataApi=await justFetch(url,{})\n    let res=await getDataApi\n    // console.log(res)\n        SetAllData(await res);\n        SetDataDx(await res.metaData.dimensions.dx);\n        SetDataItems(await res.metaData.items);\n        SetDataPe(await res.metaData.dimensions.pe);\n        SetDataRows(await res.rows);\n\n\n  };\n\n  const getDeliveries = () => {\n    justFetch(\n      `\n https://play.dhis2.org/2.35.1/api/29/analytics.json?dimension=dx:tn3p7vIxoKY;R1WAv9bVXff;ncEnqRPHFvk;FE82N2sA0YI&dimension=pe:LAST_12_MONTHS&filter=ou:ImspTQPwCqd&displayProperty=NAME&outputIdScheme=UID`,\n      {}\n    )\n      .then((res) => {\n        // console.log(res);\n        SetAllData(res);\n        SetDataDx(allData.metaData.dimensions.dx);\n        SetDataItems(allData.metaData.items);\n        SetDataPe(allData.metaData.dimensions.pe);\n        SetDataRows(allData.rows);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const generateDataForMap = () => {\n    // console.log(\"generating map data\")\n    let mapData = [];\n\n    datadx.map((mydx) => {\n      let indicatorName = \"\";\n      let data = [];\n      let finalData = {\n        name: indicatorName,\n        data: data,\n      };\n      // console.log(dataItems[mydx].name);\n      indicatorName = dataItems[mydx].name;\n\n      let filteredData = dataRows\n        .filter((dr) => {\n          return dr[0] === mydx;\n        })\n        .map((dr2) => {\n          return parseInt(dr2[3]);\n        });\n\n      data = filteredData.sort((a, b) => {\n        return a[1] - b[1];\n      });\n        // console.log(filteredData)\n      data = [{ name: indicatorName, data: filteredData }];\n      console.log(data)\n      mapData = [...mapData, data[0]];\n    });\n\n    SetDataToMap(mapData);\n  };\n\n  useEffect(()=>{\n    SetPeriod(\"LAST_12_MONTHS\")\n  },[])\n\n  useEffect(() => {\n    //   effect\n    getANCCoverage();\n    let url= `\n    https://play.dhis2.org/2.34.3/api/29/analytics.json?dimension=dx:fbfJHSPpUQD;cYeuwXTCPkU;Jtf34kNZhzP;hfdmMSPBgLG&dimension=pe:${period}&dimension=ou:ImspTQPwCqd&displayProperty=NAME&outputIdScheme=UID\n    `\n    // SetAllData(getData(url));\n    // getData(url).then((res)=>{\n    // SetAllData(res);\n    // SetDataDx(res.metaData.dimensions.dx)\n    // SetDataItems(res.metaData.items);\n    // SetDataPe(allData.metaData.dimensions.pe);\n    // SetDataRows(allData.rows);\n\n    \n// })\n    // SetDataDx(getData(url).metaData.dimensions.dx);\n    // SetDataItems(allData.metaData.items);\n    // SetDataPe(allData.metaData.dimensions.pe);\n    // SetDataRows(allData.rows);\n\n  }, [period]);\n\n  useEffect(() => {\n    // console.log(dataItems);\n\n   \n    generateDataForMap();\n \n    // console.log(0)\n  }, [dataPe]);\n\n  useEffect(() => {\n    setMapPeriods(getPeriodName(dataPe, dataItems));\n  }, [allData]);\n\n  const { children } = props;\n  return (\n    <DiseaseSurveillanceContext.Provider\n      value={{ handlePeriodChange, dataToMap, dataPe, dataItems, mapPeriods ,allData,datadx}}\n    >\n      {children}\n    </DiseaseSurveillanceContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}