{"ast":null,"code":"var _jsxFileName = \"/home/alby/Projects/Richard/pivotdhis2/src/Contexts/DeliveriesContext/DeliveriesContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { justFetch } from \"../../Services/JustFetchService\";\nimport { generateDataToMap, getData, getPeriodName } from \"../../Utils/Utils\";\nimport { OrgUnitsContext } from \"../OrgUnitsContext/OrgUnitsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DeliveriesContext = /*#__PURE__*/createContext();\nexport const DeliveriesContextProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [period, SetPeriod] = useState(\"LAST_12_MONTHS\");\n  const [dataPe, SetDataPe] = useState([]);\n  const [datadx, SetDataDx] = useState([]);\n  const [dataRows, SetDataRows] = useState([]);\n  const [dataItems, SetDataItems] = useState([]);\n  const [allData, SetAllData] = useState([]);\n  const [dataToMap, SetDataToMap] = useState([]);\n  const [mapPeriods, setMapPeriods] = useState([]);\n  const {\n    chiefDoms,\n    ouSelected,\n    facilities\n  } = useContext(OrgUnitsContext);\n\n  const getDeliveries = async () => {\n    let url = `\n    https://play.dhis2.org/2.34.3/api/29/analytics.json?dimension=dx:tn3p7vIxoKY;R1WAv9bVXff&dimension=pe:${period}&dimension=ou:${ouSelected}&displayProperty=NAME&outputIdScheme=UID\n    `;\n    let getDataApi = await justFetch(url, {});\n    let res = await getDataApi;\n    console.log({\n      res\n    });\n    SetAllData(await res);\n    SetDataDx(await res.metaData.dimensions.dx);\n    SetDataItems(await res.metaData.items);\n    SetDataPe(await res.metaData.dimensions.pe);\n    SetDataRows(await res.rows);\n  };\n\n  useEffect(() => {\n    getDeliveries();\n  }, [period, ouSelected]);\n  useEffect(() => {\n    // generateDataForMap();\n    SetDataToMap(generateDataToMap(datadx, dataRows, dataItems)); // console.log(0)\n  }, [dataRows]);\n  useEffect(() => {\n    // console.log(\"getting dara\")\n    setMapPeriods(getPeriodName(dataPe, dataItems));\n  }, [dataPe, dataItems]);\n  return /*#__PURE__*/_jsxDEV(DeliveriesContext.Provider, {\n    value: {\n      dataToMap,\n      dataPe,\n      dataItems,\n      mapPeriods,\n      allData,\n      datadx\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeliveriesContextProvider, \"qxrrP8jCyoq+/AawZ/7zGdJCe98=\");\n\n_c = DeliveriesContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveriesContextProvider\");","map":{"version":3,"sources":["/home/alby/Projects/Richard/pivotdhis2/src/Contexts/DeliveriesContext/DeliveriesContext.js"],"names":["createContext","useContext","useEffect","useState","justFetch","generateDataToMap","getData","getPeriodName","OrgUnitsContext","DeliveriesContext","DeliveriesContextProvider","props","children","period","SetPeriod","dataPe","SetDataPe","datadx","SetDataDx","dataRows","SetDataRows","dataItems","SetDataItems","allData","SetAllData","dataToMap","SetDataToMap","mapPeriods","setMapPeriods","chiefDoms","ouSelected","facilities","getDeliveries","url","getDataApi","res","console","log","metaData","dimensions","dx","items","pe","rows"],"mappings":"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","sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport { justFetch } from \"../../Services/JustFetchService\";\nimport { generateDataToMap, getData, getPeriodName } from \"../../Utils/Utils\";\nimport { OrgUnitsContext } from \"../OrgUnitsContext/OrgUnitsContext\";\n\nexport const DeliveriesContext = createContext();\n\nexport const DeliveriesContextProvider = (props) => {\n  const { children } = props;\n  const [period, SetPeriod] = useState(\"LAST_12_MONTHS\");\n  const [dataPe, SetDataPe] = useState([]);\n  const [datadx, SetDataDx] = useState([]);\n  const [dataRows, SetDataRows] = useState([]);\n  const [dataItems, SetDataItems] = useState([]);\n  const [allData, SetAllData] = useState([]);\n  const [dataToMap, SetDataToMap] = useState([]);\n  const [mapPeriods, setMapPeriods] = useState([]);\n  const { chiefDoms,ouSelected,\n    facilities}=useContext(OrgUnitsContext)\n\n  const getDeliveries = async() => {\n\n    let url = `\n    https://play.dhis2.org/2.34.3/api/29/analytics.json?dimension=dx:tn3p7vIxoKY;R1WAv9bVXff&dimension=pe:${period}&dimension=ou:${ouSelected}&displayProperty=NAME&outputIdScheme=UID\n    `;\n\n    let getDataApi=await justFetch(url,{})\n    let res=await getDataApi\n    console.log({res})\n        SetAllData(await res);\n        SetDataDx(await res.metaData.dimensions.dx);\n        SetDataItems(await res.metaData.items);\n        SetDataPe(await res.metaData.dimensions.pe);\n        SetDataRows(await res.rows);\n  };\n\n  useEffect(() => {\n    \n\n    getDeliveries()\n  }, [period,ouSelected]);\n\n\n  useEffect(() => {\n  \n   \n    // generateDataForMap();\n    SetDataToMap(generateDataToMap(datadx,dataRows,dataItems))\n \n    // console.log(0)\n  }, [dataRows]);\n\n  useEffect(() => {\n    // console.log(\"getting dara\")\n    setMapPeriods(getPeriodName(dataPe, dataItems));\n  }, [dataPe,dataItems]);\n\n\n\n\n  return (\n    <DeliveriesContext.Provider \n    value={{ dataToMap, dataPe, dataItems, mapPeriods ,allData,datadx}}\n    >{children}</DeliveriesContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}